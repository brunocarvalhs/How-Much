name: Android PR Tests

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  JDK_VERSION: 17
  GRADLE_OPTS: "-Dorg.gradle.daemon=true -Dorg.gradle.parallel=true -Dorg.gradle.configureondemand=true -Xmx3072m"
  BUILD_TOOLS_VERSION: "34.0.0"
  APP_NAME: "HowMuch"
  ANDROID_MODULE: "app"

  GITHUB_TOKEN: ${{ secrets.TOKEN }}
  GOOGLE_SERVICE_JSON: ${{ secrets.GOOGLE_SERVICE_JSON }}

# ========================
# Setup inicial
# ========================
jobs:
  setup:
    runs-on: ubuntu-24.04
    outputs:
      cache-key: ${{ steps.cache-gradle.outputs.cache-hit }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JDK_VERSION }}

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Create local.properties
        run: echo "sdk.dir=${{ env.ANDROID_HOME }}" > local.properties

      - name: Create google-services.json
        run: echo ${{ env.GOOGLE_SERVICE_JSON }} | base64 --decode > ${{ env.ANDROID_MODULE }}/google-services.json

      - name: Cache Gradle
        id: cache-gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Give execution permissions to gradlew
        run: chmod +x gradlew

      - name: Upload minimal source
        uses: actions/upload-artifact@v4
        with:
          name: source
          path: |
            gradlew
            build.gradle
            settings.gradle
            app/src

  # ========================
  # Unit Tests
  # ========================
  unit-tests:
    needs: setup
    runs-on: ubuntu-24.04
    steps:
      - name: Download source
        uses: actions/download-artifact@v4
        with:
          name: source

      - name: Restore Gradle Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Give execution permissions to gradlew
        run: chmod +x gradlew

      - name: Run Unit Tests
        run: ./gradlew testDebug --build-cache
        env:
          GRADLE_OPTS: ${{ env.GRADLE_OPTS }}

      - name: Comment PR Result
        uses: mb2dev/github-action-comment-pull-request@1.0.0
        with:
          message: ${{ success() && '✅ Testes unitários passaram!' || '❌ Falha nos testes unitários!' }}
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}

  # ========================
  # Lint Check
  # ========================
  lint:
    needs: setup
    runs-on: ubuntu-24.04
    steps:
      - name: Download source
        uses: actions/download-artifact@v4
        with:
          name: source

      - name: Restore Gradle Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Give execution permissions to gradlew
        run: chmod +x gradlew

      - name: Run Lint
        run: ./gradlew lintDebug
        env:
          GRADLE_OPTS: ${{ env.GRADLE_OPTS }}

      - name: Comment PR Result
        uses: mb2dev/github-action-comment-pull-request@1.0.0
        with:
          message: ${{ success() && '✅ Lint passou!' || '❌ Falha no Lint!' }}
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}

  # ========================
  # Detekt Check
  # ========================
  detekt:
    needs: setup
    runs-on: ubuntu-24.04
    steps:
      - name: Download source
        uses: actions/download-artifact@v4
        with:
          name: source

      - name: Restore Gradle Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Give execution permissions to gradlew
        run: chmod +x gradlew

      - name: Run Detekt
        run: ./gradlew detekt
        env:
          GRADLE_OPTS: ${{ env.GRADLE_OPTS }}

      - name: Comment PR Result
        uses: mb2dev/github-action-comment-pull-request@1.0.0
        with:
          message: ${{ success() && '✅ Detekt passou!' || '❌ Falha no Detekt!' }}
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}

  # ========================
  # Build APK (opcional para PR)
  # ========================
  build:
    needs: [unit-tests, lint, detekt]
    runs-on: ubuntu-24.04
    steps:
      - name: Download source
        uses: actions/download-artifact@v4
        with:
          name: source

      - name: Restore Gradle Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Give execution permissions to gradlew
        run: chmod +x gradlew

      - name: Build APK Debug
        run: ./gradlew assembleDebug --build-cache

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-apk-debug
          path: ${{ env.ANDROID_MODULE }}/build/outputs/apk/debug/*.apk
