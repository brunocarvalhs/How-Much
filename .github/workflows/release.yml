name: Android CI/CD Pipeline

on:
  push:
    branches: [master]

env:
  # Configuração global
  JDK_VERSION: 17
  GRADLE_OPTS: "-Dorg.gradle.daemon=true -Dorg.gradle.parallel=true -Dorg.gradle.configureondemand=true -Xmx3072m"
  BUILD_TOOLS_VERSION: "34.0.0"
  ANDROID_LOCAL_PROPERTIES: local.properties

  # Projeto
  APP_NAME: "HowMuch"
  PACKAGE_NAME: "br.com.brunocarvalhs.howmuch"
  ANDROID_MODULE: "app"
  APK_DEBUG_PATH: app/build/outputs/apk/debug/*.apk
  APK_RELEASE_PATH: app/build/outputs/apk/release/*.apk
  AAB_RELEASE_PATH: app/build/outputs/bundle/release/*.aab

  # Secrets
  GOOGLE_SERVICE_JSON: ${{ secrets.GOOGLE_SERVICE_JSON }}
  KEYSTORE_FILE_BASE64: ${{ secrets.KEYSTORE_FILE_BASE64 }}
  KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
  KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
  KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
  GITHUB_TOKEN: ${{ secrets.TOKEN }}
  DEPLOY_SERVICE_ACCOUNT_JSON: ${{ secrets.DEPLOY_SERVICE_ACCOUNT_JSON }}

# ========================
# 1️⃣ Setup Inicial
# ========================
jobs:
  setup:
    runs-on: ubuntu-24.04
    outputs:
      cache-hit: ${{ steps.cache-gradle.outputs.cache-hit }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JDK_VERSION }}

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Create local.properties
        run: echo "sdk.dir=${{ env.ANDROID_HOME }}" > ${{ env.ANDROID_LOCAL_PROPERTIES }}

      - name: Create google-services.json
        run: |
          echo ${{ env.GOOGLE_SERVICE_JSON }} | base64 --decode > ${{ env.ANDROID_MODULE }}/google-services.json

      - name: Restore Gradle Cache
        id: cache-gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Upload minimal workspace
        uses: actions/upload-artifact@v4
        with:
          name: source
          path: |
            gradlew
            build.gradle
            settings.gradle
            app/src

  # ========================
  # 2️⃣ Jobs de Verificação (Paralelos)
  # ========================

  unit-tests:
    needs: setup
    runs-on: ubuntu-24.04
    steps:
      - name: Download source
        uses: actions/download-artifact@v4
        with:
          name: source

      - name: Restore Gradle Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Give execution permissions
        run: chmod +x gradlew

      - name: Run Unit Tests
        run: ./gradlew testDebug --build-cache
        env:
          GRADLE_OPTS: ${{ env.GRADLE_OPTS }}

  lint:
    needs: setup
    runs-on: ubuntu-24.04
    steps:
      - name: Download source
        uses: actions/download-artifact@v4
        with:
          name: source

      - name: Restore Gradle Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Give execution permissions
        run: chmod +x gradlew

      - name: Run Lint
        run: ./gradlew lintDebug
        env:
          GRADLE_OPTS: ${{ env.GRADLE_OPTS }}

  detekt:
    needs: setup
    runs-on: ubuntu-24.04
    steps:
      - name: Download source
        uses: actions/download-artifact@v4
        with:
          name: source

      - name: Restore Gradle Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Give execution permissions
        run: chmod +x gradlew

      - name: Run Detekt
        run: ./gradlew detekt
        env:
          GRADLE_OPTS: ${{ env.GRADLE_OPTS }}

  # ========================
  # 3️⃣ Build AAB
  # ========================
  build:
    needs: [unit-tests, lint, detekt]
    runs-on: ubuntu-24.04
    env:
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
      KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
    steps:
      - name: Download source
        uses: actions/download-artifact@v4
        with:
          name: source

      - name: Restore Gradle Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Give execution permissions
        run: chmod +x gradlew

      - name: Recreate keystore from secret
        run: |
          echo $KEYSTORE_FILE_BASE64 | base64 --decode > ${{ env.ANDROID_MODULE }}/release.keystore

      - name: Build AAB
        run: ./gradlew bundleRelease --build-cache

      - name: Upload AAB Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-aab
          path: ${{ env.AAB_RELEASE_PATH }}

  # ========================
  # 4️⃣ Release GitHub
  # ========================
  release:
    needs: build
    runs-on: ubuntu-24.04
    steps:
      - name: Download AAB
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-aab

      - name: Get version from build.gradle.kts
        run: |
          VERSION=$(grep versionName app/build.gradle.kts | sed 's/.*versionName = "\(.*\)"/\1/')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: actions/create-release@latest
        with:
          tag_name: v${{ env.VERSION }}
          release_name: v${{ env.VERSION }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # ========================
  # 5️⃣ Deploy Google Play
  # ========================
  deploy-prod:
    needs: build
    runs-on: ubuntu-24.04
    steps:
      - name: Download AAB
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-aab

      - name: Deploy to Production
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.DEPLOY_SERVICE_ACCOUNT_JSON }}
          packageName: ${{ env.PACKAGE_NAME }}
          releaseFiles: ${{ env.AAB_RELEASE_PATH }}
          track: production
          status: completed

  deploy-beta:
    needs: build
    if: ${{ needs.deploy-prod.result == 'failure' }}
    runs-on: ubuntu-24.04
    steps:
      - name: Download AAB
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-aab

      - name: Deploy to Beta
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.DEPLOY_SERVICE_ACCOUNT_JSON }}
          packageName: ${{ env.PACKAGE_NAME }}
          releaseFiles: ${{ env.AAB_RELEASE_PATH }}
          track: beta
          status: completed

  deploy-internal:
    needs: build
    if: ${{ needs.deploy-beta.result == 'failure' }}
    runs-on: ubuntu-24.04
    steps:
      - name: Download AAB
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-aab

      - name: Deploy to Internal
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.DEPLOY_SERVICE_ACCOUNT_JSON }}
          packageName: ${{ env.PACKAGE_NAME }}
          releaseFiles: ${{ env.AAB_RELEASE_PATH }}
          track: internal
          status: completed
